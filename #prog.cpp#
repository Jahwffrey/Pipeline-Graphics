#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/glut.h>

void makeBox(float x,float y,float z);

//The display function:
void display(){
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	glShadeModel(GL_FLAT);
	makeBox(-19,0,0);
	makeBox(11,0,0);
	makeBox(-4,15,0);
	makeBox(-4,-15,0);
	glutSwapBuffers();
}

void makeBox(float x, float y, float z){
	//In here i will create a simple function that generates the eaves and
	//solid block as one model given simply and x,y,z and later color.
  glBegin(GL_TRIANGLE_STRIP);
		glColor3f(1,0,0);
		//***Eaves
		//**outer
		//front
		glVertex3f(x,y,z);
		glVertex3f(x,y-1,z);
		glVertex3f(x+8,y,z);
		glVertex3f(x+8,y-1,z);
		//right
		glVertex3f(x+8,y,z-8);
		glVertex3f(x+8,y-1,z-8);
		//back
		glVertex3f(x,y,z-8);
		glVertex3f(x,y-1,z-8);
		//left
		glVertex3f(x,y,z);
		glVertex3f(x,y-1,z);
	glEnd();
	glBegin(GL_TRIANGLE_STRIP);
		//**inner
		//front
		glVertex3f(x+1,y,z-1);
		glVertex3f(x+1,y-1,z-1);
		glVertex3f(x+7,y,z-1);
		glVertex3f(x+7,y-1,z-1);
		//right
		glVertex3f(x+7,y,z-7);
		glVertex3f(x+7,y-1,z-7);
		//back
		glVertex3f(x+1,y,z-7);
		glVertex3f(x+1,y-1,z-7);
		//left
		glVertex3f(x+1,y,z-1);
		glVertex3f(x+1,y-1,z-1);
	glEnd();
	//top and bottom of eaves
	for(int i = 1;i>=0;i--){
		glBegin(GL_TRIANGLE_STRIP);
			if(i==0){ 
				glColor3f(0,0,1);
			}
			else{ 
				glColor3f(0,1,0);
			}
			//left
			glVertex3f(x,y-i,z);
			glVertex3f(x+1,y-i,z-1);
			glVertex3f(x,y-i,z-8);
			glVertex3f(x+1,y-i,z-7);
			//back
			glVertex3f(x+8,y-i,z-8);
			glVertex3f(x+7,y-i,z-7);
			//right
			glVertex3f(x+8,y-i,z);
			glVertex3f(x+7,y-i,z-1);
			//front
			glVertex3f(x,y-i,z);
			glVertex3f(x+1,y-i,z-1);
		glEnd();
	} 
}

//Easy exiting
void keys(unsigned char key, int x, int y){
	switch(key){
		case 'q':
			exit(0);
			break;
	}
}

int main(int argc, char **argv){
	int win_width = 700;
	int win_height = 700;

	//Set up the window and things
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE | GLUT_DEPTH);
	glutInitWindowSize(win_width,win_height);
	glutCreateWindow("Static Blocks");
	glutDisplayFunc(display);
	glutKeyboardFunc(keys);

	//Set the initial settings
	//glEnable(GL_LIGHTING);	
	glEnable(GL_DEPTH_TEST); //<- hidden surface elimination eventually
	
	glMatrixMode(GL_PROJECTION);
	gluPerspective(40.0,1,.1,100);
	
	glMatrixMode(GL_MODELVIEW);
	gluLookAt(0,20.0,50.0,0,0,0,0,1.0,0); //i am behind and up

	glutMainLoop();
	
	return 0;
}
