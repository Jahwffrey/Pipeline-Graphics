#include "matrix.h"
#include <iostream>
//im going to represent my matrices as such:
//	{1,0,0,0
//	,0,1,0,0
//	,0,0,1,0
//	,0,0,0,1}

/*
 class matrix{
	float values[16];
	}
*/

matrix::matrix(){
	for(int i = 0; i < 16; i++){
		values[i] = 0;
	}
}

matrix::matrix(float* set_values){
	for(int i = 0; i < 16; i++){
		values[i] = set_values[i];
	}
}

matrix::matrix(const matrix& copy){
	for(int i = 0; i < 16; i++){
		values[i] = copy.values[i];
	}
}

void matrix::times(matrix matt){
	float temps[16];
	for(int i = 0;i < 16; i++){
		temps[i] = values[i];
	}
	float* mat = matt.values;
	
	temps[0] = mat[0]*values[0] + mat[4]*values[1] + mat[8]*values[2] + mat[12]*values[3];	
	temps[1] = mat[4]*values[0] + mat[5]*values[1] + mat[9]*values[2] + mat[13]*values[3];
	temps[2] = mat[8]*values[0] + mat[6]*values[1] + mat[10]*values[2] + mat[14]*values[3];
	temps[3] = mat[12]*values[0] + mat[7]*values[1] + mat[11]*values[2] + mat[15]*values[3];

	temps[4] = mat[0]*values[4] + mat[4]*values[5] + mat[8]*values[6] + mat[12]*values[7];	
	temps[5] = mat[1]*values[4] + mat[5]*values[5] + mat[9]*values[6] + mat[13]*values[7];
	temps[6] = mat[2]*values[4] + mat[6]*values[5] + mat[10]*values[6] + mat[14]*values[7];
	temps[7] = mat[3]*values[4] + mat[7]*values[5] + mat[11]*values[6] + mat[15]*values[7];
	
	temps[8] = mat[0]*values[8] + mat[4]*values[9] + mat[8]*values[10] + mat[12]*values[11];	
	temps[9] = mat[1]*values[8] + mat[5]*values[9] + mat[9]*values[10] + mat[13]*values[11];
	temps[10] = mat[2]*values[8] + mat[6]*values[9] + mat[10]*values[10] + mat[14]*values[11];
	temps[11] = mat[3]*values[8] + mat[7]*values[9] + mat[11]*values[10] + mat[15]*values[11];

	temps[12] = mat[0]*values[12] + mat[4]*values[13] + mat[8]*values[14] + mat[12]*values[15];	
	temps[13] = mat[1]*values[12] + mat[5]*values[13] + mat[9]*values[14] + mat[13]*values[15];
	temps[14] = mat[2]*values[12] + mat[6]*values[13] + mat[10]*values[14] + mat[14]*values[15];
	temps[15] = mat[3]*values[12] + mat[7]*values[13] + mat[11]*values[14] + mat[15]*values[15];
}
